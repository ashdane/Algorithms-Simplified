//declaration and initialization
let queue = [];
let front = rear = -1;
//enqueue
function enqueue(queue, task)
{
    if(front == -1 && rear == -1)
    {
        ++rear;
        ++front;
        queue[rear] = task;
    }
    else
    {
        queue[++rear] = task;
    }
}
//dequeue
function dequeue(queue)
{
    console.log("\n");
    if(front == -1 || front>rear)
    {
        console.log("Queue Underflow");
    }
    else
    {
        console.log(queue[front++], "has been dequeued");
    }
}
//display
function display(queue)
{
    if(front != -1)
    {
        console.log("\n")
        console.log("QUEUE:")
        for(let i=front; i<=rear; i++)
        {
            console.log(queue[i]);
        }
    }
}
//peek
function peek(queue)
{
    console.log("\n");
    console.log("PEEK: ");
    if(front == rear)
    {
        console.log("Queue Underflow");
    }
    else
    {
        console.log(queue[front]);
    }
}
function reverse(queue, front, rear)
{
    if(front < rear)
    {
        let temp = queue[front];
        queue[front] = queue[rear];
        queue[rear] = temp;
        reverse(queue, front+1, rear-1);
    }
}
enqueue(queue, "task_1");
enqueue(queue, "task_2");
enqueue(queue, "task_3");
enqueue(queue, "task_4");
dequeue(queue);
enqueue(queue, "task_5");
enqueue(queue, "task_6");
dequeue(queue);
dequeue(queue);
peek(queue);
display(queue);
reverse(queue, front, rear);
display(queue);
